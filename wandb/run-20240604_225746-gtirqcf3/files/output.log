Using cpu device
Wrapping the env with a `Monitor` wrapper
Wrapping the env in a DummyVecEnv.
Calculated flat features size: 2560
Traceback (most recent call last):
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/pong/run_supervised.py", line 35, in <module>
    model.learn(total_timesteps=1000000, callback=WandbCallback())
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/ppo/ppo.py", line 315, in learn
    return super().learn(
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 287, in learn
    total_timesteps, callback = self._setup_learn(
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/base_class.py", line 423, in _setup_learn
    self._last_obs = self.env.reset()  # type: ignore[assignment]
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/vec_env/dummy_vec_env.py", line 77, in reset
    obs, self.reset_infos[env_idx] = self.envs[env_idx].reset(seed=self._seeds[env_idx], **maybe_options)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/monitor.py", line 83, in reset
    return self.env.reset(**kwargs)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/pong/pong_envs/pong_env.py", line 68, in reset
    self._get_observation()
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/pong/pong_envs/pong_env.py", line 92, in _get_observation
    frame = pygame.surfarray.array3d(pygame.display.get_surface())
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/pygame/surfarray.py", line 190, in array3d
    width, height = surface.get_size()
AttributeError: 'NoneType' object has no attribute 'get_size'