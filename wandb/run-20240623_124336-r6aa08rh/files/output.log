Using cpu device
Wrapping the env with a `Monitor` wrapper
Wrapping the env in a DummyVecEnv.
-----------------------------
| time/              |      |
|    fps             | 274  |
|    iterations      | 1    |
|    time_elapsed    | 7    |
|    total_timesteps | 2048 |
-----------------------------
-----------------------------------------
| time/                   |             |
|    fps                  | 84          |
|    iterations           | 2           |
|    time_elapsed         | 48          |
|    total_timesteps      | 4096        |
| train/                  |             |
|    approx_kl            | 0.010070817 |
|    clip_fraction        | 0.0517      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.09       |
|    explained_variance   | 0.41        |
|    learning_rate        | 0.0003      |
|    loss                 | 0.00721     |
|    n_updates            | 10          |
|    policy_gradient_loss | -0.00282    |
|    value_loss           | 0.00709     |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 4.1e+03     |
|    ep_rew_mean          | -2.94       |
| time/                   |             |
|    fps                  | 67          |
|    iterations           | 3           |
|    time_elapsed         | 91          |
|    total_timesteps      | 6144        |
| train/                  |             |
|    approx_kl            | 0.010376867 |
|    clip_fraction        | 0.0542      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.08       |
|    explained_variance   | 0.282       |
|    learning_rate        | 0.0003      |
|    loss                 | 0.00142     |
|    n_updates            | 20          |
|    policy_gradient_loss | -0.00359    |
|    value_loss           | 0.00172     |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 4.1e+03     |
|    ep_rew_mean          | -2.94       |
| time/                   |             |
|    fps                  | 61          |
|    iterations           | 4           |
|    time_elapsed         | 133         |
|    total_timesteps      | 8192        |
| train/                  |             |
|    approx_kl            | 0.012379897 |
|    clip_fraction        | 0.0646      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.06       |
|    explained_variance   | 0.331       |
|    learning_rate        | 0.0003      |
|    loss                 | -0.0143     |
|    n_updates            | 30          |
|    policy_gradient_loss | -0.00449    |
|    value_loss           | 0.00074     |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 4.1e+03     |
|    ep_rew_mean          | -2.98       |
| time/                   |             |
|    fps                  | 57          |
|    iterations           | 5           |
|    time_elapsed         | 178         |
|    total_timesteps      | 10240       |
| train/                  |             |
|    approx_kl            | 0.010150102 |
|    clip_fraction        | 0.00806     |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.02       |
|    explained_variance   | -0.456      |
|    learning_rate        | 0.0003      |
|    loss                 | 0.00979     |
|    n_updates            | 40          |
|    policy_gradient_loss | 0.000328    |
|    value_loss           | 0.000182    |
-----------------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 4.1e+03      |
|    ep_rew_mean          | -2.98        |
| time/                   |              |
|    fps                  | 55           |
|    iterations           | 6            |
|    time_elapsed         | 221          |
|    total_timesteps      | 12288        |
| train/                  |              |
|    approx_kl            | 0.0067015393 |
|    clip_fraction        | 0.0227       |
|    clip_range           | 0.2          |
|    entropy_loss         | -0.997       |
|    explained_variance   | -0.397       |
|    learning_rate        | 0.0003       |
|    loss                 | -0.0161      |
|    n_updates            | 50           |
|    policy_gradient_loss | -0.000971    |
|    value_loss           | 6.92e-05     |
------------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 4.1e+03     |
|    ep_rew_mean          | -3.03       |
| time/                   |             |
|    fps                  | 54          |
|    iterations           | 7           |
|    time_elapsed         | 264         |
|    total_timesteps      | 14336       |
| train/                  |             |
|    approx_kl            | 0.005806066 |
|    clip_fraction        | 0.00601     |
|    clip_range           | 0.2         |
|    entropy_loss         | -0.964      |
|    explained_variance   | -0.21       |
|    learning_rate        | 0.0003      |
|    loss                 | -0.0145     |
|    n_updates            | 60          |
|    policy_gradient_loss | -0.000106   |
|    value_loss           | 3.02e-05    |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 4.1e+03     |
|    ep_rew_mean          | -3.03       |
| time/                   |             |
|    fps                  | 52          |
|    iterations           | 8           |
|    time_elapsed         | 309         |
|    total_timesteps      | 16384       |
| train/                  |             |
|    approx_kl            | 0.008180236 |
|    clip_fraction        | 0.000244    |
|    clip_range           | 0.2         |
|    entropy_loss         | -0.925      |
|    explained_variance   | -0.0744     |
|    learning_rate        | 0.0003      |
|    loss                 | -0.0208     |
|    n_updates            | 70          |
|    policy_gradient_loss | 0.000319    |
|    value_loss           | 3.71e-05    |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 4.1e+03     |
|    ep_rew_mean          | -3.05       |
| time/                   |             |
|    fps                  | 51          |
|    iterations           | 9           |
|    time_elapsed         | 356         |
|    total_timesteps      | 18432       |
| train/                  |             |
|    approx_kl            | 0.001785062 |
|    clip_fraction        | 0.0266      |
|    clip_range           | 0.2         |
|    entropy_loss         | -0.919      |
|    explained_variance   | -0.00104    |
|    learning_rate        | 0.0003      |
|    loss                 | -0.00218    |
|    n_updates            | 80          |
|    policy_gradient_loss | -0.000864   |
|    value_loss           | 1.67e-05    |
-----------------------------------------
Traceback (most recent call last):
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/freeway/run_supervised_gnn.py", line 47, in <module>
    model.learn(total_timesteps=1000000, callback=WandbCallback())
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/ppo/ppo.py", line 315, in learn
    return super().learn(
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 300, in learn
    continue_training = self.collect_rollouts(self.env, callback, self.rollout_buffer, n_rollout_steps=self.n_steps)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 179, in collect_rollouts
    actions, values, log_probs = self.policy(obs_tensor)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 645, in forward
    features = self.extract_features(obs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 672, in extract_features
    return super().extract_features(obs, self.features_extractor if features_extractor is None else features_extractor)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 131, in extract_features
    return features_extractor(preprocessed_obs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/model/policy.py", line 40, in forward
    pyg_data = self.encoder.encode(observations)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/encoder/GraphEncoder.py", line 158, in encode
    return Batch.from_data_list(self.to_pyg_data(batch_data))
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch_geometric/data/batch.py", line 97, in from_data_list
    batch, slice_dict, inc_dict = collate(
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch_geometric/data/collate.py", line 109, in collate
    value, slices, incs = _collate(attr, values, data_list, stores,
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch_geometric/data/collate.py", line 171, in _collate
    values = [
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch_geometric/data/collate.py", line 171, in <listcomp>
    values = [
KeyboardInterrupt