Using cpu device
Wrapping the env with a `Monitor` wrapper
Wrapping the env in a DummyVecEnv.
Logging to ./logs/PPO_12
---------------------------------
| rollout/           |          |
|    ep_len_mean     | 604      |
|    ep_rew_mean     | 41.3     |
| time/              |          |
|    fps             | 123      |
|    iterations      | 1        |
|    time_elapsed    | 16       |
|    total_timesteps | 2048     |
---------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 653         |
|    ep_rew_mean          | 35.6        |
| time/                   |             |
|    fps                  | 53          |
|    iterations           | 2           |
|    time_elapsed         | 77          |
|    total_timesteps      | 4096        |
| train/                  |             |
|    approx_kl            | 0.008618832 |
|    clip_fraction        | 0.0274      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.09       |
|    explained_variance   | 0.0159      |
|    learning_rate        | 0.0003      |
|    loss                 | 1.2         |
|    n_updates            | 10          |
|    policy_gradient_loss | -0.00486    |
|    value_loss           | 4.44        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 651         |
|    ep_rew_mean          | 22.1        |
| time/                   |             |
|    fps                  | 44          |
|    iterations           | 3           |
|    time_elapsed         | 138         |
|    total_timesteps      | 6144        |
| train/                  |             |
|    approx_kl            | 0.008011332 |
|    clip_fraction        | 0.034       |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.09       |
|    explained_variance   | 0.721       |
|    learning_rate        | 0.0003      |
|    loss                 | 2.41        |
|    n_updates            | 20          |
|    policy_gradient_loss | -0.00227    |
|    value_loss           | 6.86        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 644         |
|    ep_rew_mean          | 21.2        |
| time/                   |             |
|    fps                  | 41          |
|    iterations           | 4           |
|    time_elapsed         | 198         |
|    total_timesteps      | 8192        |
| train/                  |             |
|    approx_kl            | 0.011629666 |
|    clip_fraction        | 0.0732      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.09       |
|    explained_variance   | 0.804       |
|    learning_rate        | 0.0003      |
|    loss                 | 4.11        |
|    n_updates            | 30          |
|    policy_gradient_loss | -0.0051     |
|    value_loss           | 7.84        |
-----------------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 648          |
|    ep_rew_mean          | 19.3         |
| time/                   |              |
|    fps                  | 39           |
|    iterations           | 5            |
|    time_elapsed         | 257          |
|    total_timesteps      | 10240        |
| train/                  |              |
|    approx_kl            | 0.0050703883 |
|    clip_fraction        | 0.0112       |
|    clip_range           | 0.2          |
|    entropy_loss         | -1.09        |
|    explained_variance   | 0.753        |
|    learning_rate        | 0.0003       |
|    loss                 | 3.74         |
|    n_updates            | 40           |
|    policy_gradient_loss | -0.00478     |
|    value_loss           | 10.3         |
------------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 664         |
|    ep_rew_mean          | 13.9        |
| time/                   |             |
|    fps                  | 38          |
|    iterations           | 6           |
|    time_elapsed         | 317         |
|    total_timesteps      | 12288       |
| train/                  |             |
|    approx_kl            | 0.007885203 |
|    clip_fraction        | 0.028       |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.08       |
|    explained_variance   | 0.765       |
|    learning_rate        | 0.0003      |
|    loss                 | 8.37        |
|    n_updates            | 50          |
|    policy_gradient_loss | -0.00464    |
|    value_loss           | 11.8        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 671         |
|    ep_rew_mean          | 14.7        |
| time/                   |             |
|    fps                  | 37          |
|    iterations           | 7           |
|    time_elapsed         | 378         |
|    total_timesteps      | 14336       |
| train/                  |             |
|    approx_kl            | 0.006304792 |
|    clip_fraction        | 0.0339      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.08       |
|    explained_variance   | 0.616       |
|    learning_rate        | 0.0003      |
|    loss                 | 3.72        |
|    n_updates            | 60          |
|    policy_gradient_loss | -0.00432    |
|    value_loss           | 11.8        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 681         |
|    ep_rew_mean          | 16.7        |
| time/                   |             |
|    fps                  | 37          |
|    iterations           | 8           |
|    time_elapsed         | 439         |
|    total_timesteps      | 16384       |
| train/                  |             |
|    approx_kl            | 0.011405727 |
|    clip_fraction        | 0.0913      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.08       |
|    explained_variance   | 0.732       |
|    learning_rate        | 0.0003      |
|    loss                 | 2.11        |
|    n_updates            | 70          |
|    policy_gradient_loss | -0.006      |
|    value_loss           | 8.03        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 702         |
|    ep_rew_mean          | 17.6        |
| time/                   |             |
|    fps                  | 36          |
|    iterations           | 9           |
|    time_elapsed         | 501         |
|    total_timesteps      | 18432       |
| train/                  |             |
|    approx_kl            | 0.009582618 |
|    clip_fraction        | 0.0823      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.07       |
|    explained_variance   | 0.692       |
|    learning_rate        | 0.0003      |
|    loss                 | 6.25        |
|    n_updates            | 80          |
|    policy_gradient_loss | -0.00799    |
|    value_loss           | 7.84        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 701         |
|    ep_rew_mean          | 16.9        |
| time/                   |             |
|    fps                  | 36          |
|    iterations           | 10          |
|    time_elapsed         | 564         |
|    total_timesteps      | 20480       |
| train/                  |             |
|    approx_kl            | 0.010084128 |
|    clip_fraction        | 0.133       |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.06       |
|    explained_variance   | 0.621       |
|    learning_rate        | 0.0003      |
|    loss                 | 2.65        |
|    n_updates            | 90          |
|    policy_gradient_loss | -0.00683    |
|    value_loss           | 6.48        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 688         |
|    ep_rew_mean          | 14          |
| time/                   |             |
|    fps                  | 36          |
|    iterations           | 11          |
|    time_elapsed         | 624         |
|    total_timesteps      | 22528       |
| train/                  |             |
|    approx_kl            | 0.014311318 |
|    clip_fraction        | 0.192       |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.04       |
|    explained_variance   | 0.838       |
|    learning_rate        | 0.0003      |
|    loss                 | 1.43        |
|    n_updates            | 100         |
|    policy_gradient_loss | -0.0136     |
|    value_loss           | 4.97        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 683         |
|    ep_rew_mean          | 15.4        |
| time/                   |             |
|    fps                  | 35          |
|    iterations           | 12          |
|    time_elapsed         | 685         |
|    total_timesteps      | 24576       |
| train/                  |             |
|    approx_kl            | 0.012217825 |
|    clip_fraction        | 0.128       |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.03       |
|    explained_variance   | 0.753       |
|    learning_rate        | 0.0003      |
|    loss                 | 2.02        |
|    n_updates            | 110         |
|    policy_gradient_loss | -0.00612    |
|    value_loss           | 6.5         |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 689         |
|    ep_rew_mean          | 16.1        |
| time/                   |             |
|    fps                  | 35          |
|    iterations           | 13          |
|    time_elapsed         | 744         |
|    total_timesteps      | 26624       |
| train/                  |             |
|    approx_kl            | 0.008230854 |
|    clip_fraction        | 0.116       |
|    clip_range           | 0.2         |
|    entropy_loss         | -1          |
|    explained_variance   | 0.777       |
|    learning_rate        | 0.0003      |
|    loss                 | 2.2         |
|    n_updates            | 120         |
|    policy_gradient_loss | -0.00523    |
|    value_loss           | 6.98        |
-----------------------------------------
Traceback (most recent call last):
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/work/rleap1/rishabh.bhatia/Master-Thesis-GNN/games/pong/run_supervised_gnn.py", line 41, in <module>
    model.learn(total_timesteps=1000000, callback=WandbCallback())
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/ppo/ppo.py", line 315, in learn
    return super().learn(
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 300, in learn
    continue_training = self.collect_rollouts(self.env, callback, self.rollout_buffer, n_rollout_steps=self.n_steps)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 179, in collect_rollouts
    actions, values, log_probs = self.policy(obs_tensor)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 645, in forward
    features = self.extract_features(obs)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 672, in extract_features
    return super().extract_features(obs, self.features_extractor if features_extractor is None else features_extractor)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 131, in extract_features
    return features_extractor(preprocessed_obs)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/work/rleap1/rishabh.bhatia/Master-Thesis-GNN/games/model/policy.py", line 40, in forward
    pyg_data = self.encoder.encode(observations)
  File "/work/rleap1/rishabh.bhatia/Master-Thesis-GNN/games/encoder/GraphEncoder.py", line 44, in encode
    return Batch.from_data_list(self.to_pyg_data(batch_data))
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/torch_geometric/data/batch.py", line 97, in from_data_list
    batch, slice_dict, inc_dict = collate(
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/torch_geometric/data/collate.py", line 143, in collate
    out_store.batch = repeat_interleave(repeats, device=device)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/torch_geometric/data/collate.py", line 315, in repeat_interleave
    outs = [torch.full((n, ), i, device=device) for i, n in enumerate(repeats)]
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/torch_geometric/data/collate.py", line 315, in <listcomp>
    outs = [torch.full((n, ), i, device=device) for i, n in enumerate(repeats)]
KeyboardInterrupt