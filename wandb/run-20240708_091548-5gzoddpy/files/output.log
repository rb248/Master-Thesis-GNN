Using cpu device
Logging to ./logs/PPO_21
---------------------------------
| rollout/           |          |
|    ep_len_mean     | 794      |
|    ep_rew_mean     | -54.6    |
| time/              |          |
|    fps             | 283      |
|    iterations      | 1        |
|    time_elapsed    | 28       |
|    total_timesteps | 8192     |
---------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 763          |
|    ep_rew_mean          | -60.9        |
| time/                   |              |
|    fps                  | 64           |
|    iterations           | 2            |
|    time_elapsed         | 252          |
|    total_timesteps      | 16384        |
| train/                  |              |
|    approx_kl            | 0.0045384187 |
|    clip_fraction        | 0.0243       |
|    clip_range           | 0.2          |
|    entropy_loss         | -1.09        |
|    explained_variance   | -0.0307      |
|    learning_rate        | 0.0003       |
|    loss                 | 1.35         |
|    n_updates            | 10           |
|    policy_gradient_loss | -0.000578    |
|    value_loss           | 3.04         |
------------------------------------------
Eval num_timesteps=20000, episode_reward=-79.50 +/- 22.24
Episode length: 549.60 +/- 92.03
------------------------------------------
| eval/                   |              |
|    mean_ep_length       | 550          |
|    mean_reward          | -79.5        |
| time/                   |              |
|    total_timesteps      | 20000        |
| train/                  |              |
|    approx_kl            | 0.0077957865 |
|    clip_fraction        | 0.0851       |
|    clip_range           | 0.2          |
|    entropy_loss         | -1.09        |
|    explained_variance   | 0.701        |
|    learning_rate        | 0.0003       |
|    loss                 | 2.18         |
|    n_updates            | 20           |
|    policy_gradient_loss | -0.00218     |
|    value_loss           | 3.11         |
------------------------------------------
New best mean reward!
---------------------------------
| rollout/           |          |
|    ep_len_mean     | 770      |
|    ep_rew_mean     | -60.5    |
| time/              |          |
|    fps             | 52       |
|    iterations      | 3        |
|    time_elapsed    | 471      |
|    total_timesteps | 24576    |
---------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 790          |
|    ep_rew_mean          | -61.6        |
| time/                   |              |
|    fps                  | 47           |
|    iterations           | 4            |
|    time_elapsed         | 686          |
|    total_timesteps      | 32768        |
| train/                  |              |
|    approx_kl            | 0.0074645295 |
|    clip_fraction        | 0.0713       |
|    clip_range           | 0.2          |
|    entropy_loss         | -1.08        |
|    explained_variance   | 0.753        |
|    learning_rate        | 0.0003       |
|    loss                 | 2.54         |
|    n_updates            | 30           |
|    policy_gradient_loss | -0.00371     |
|    value_loss           | 5.28         |
------------------------------------------
Traceback (most recent call last):
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/networkx/drawing/layout.py", line 477, in spring_layout
    raise ValueError
ValueError
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/work/rleap1/rishabh.bhatia/Master-Thesis-GNN/games/pong/run_supervised_gnn.py", line 64, in <module>
    model.learn(total_timesteps=1000000, callback=[eval_callback,WandbCallback()])
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/ppo/ppo.py", line 315, in learn
    return super().learn(
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 300, in learn
    continue_training = self.collect_rollouts(self.env, callback, self.rollout_buffer, n_rollout_steps=self.n_steps)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 201, in collect_rollouts
    if not callback.on_step():
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/callbacks.py", line 114, in on_step
    return self._on_step()
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/callbacks.py", line 219, in _on_step
    continue_training = callback.on_step() and continue_training
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/callbacks.py", line 114, in on_step
    return self._on_step()
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/callbacks.py", line 460, in _on_step
    episode_rewards, episode_lengths = evaluate_policy(
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/evaluation.py", line 88, in evaluate_policy
    actions, states = model.predict(
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/base_class.py", line 556, in predict
    return self.policy.predict(observation, state, episode_start, deterministic)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 368, in predict
    actions = self._predict(obs_tensor, deterministic=deterministic)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 717, in _predict
    return self.get_distribution(observation).get_actions(deterministic=deterministic)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 750, in get_distribution
    features = super().extract_features(obs, self.pi_features_extractor)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 131, in extract_features
    return features_extractor(preprocessed_obs)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/work/rleap1/rishabh.bhatia/Master-Thesis-GNN/games/model/policy.py", line 40, in forward
    pyg_data = self.encoder.encode(observations)
  File "/work/rleap1/rishabh.bhatia/Master-Thesis-GNN/games/encoder/GraphEncoder.py", line 40, in encode
    pos = nx.spring_layout(graph)  # positions for all nodes
  File "<class 'networkx.utils.decorators.argmap'> compilation 4", line 4, in argmap_spring_layout_1
    import inspect
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/networkx/drawing/layout.py", line 492, in spring_layout
    pos = _fruchterman_reingold(
  File "<class 'networkx.utils.decorators.argmap'> compilation 12", line 4, in argmap__fruchterman_reingold_9
    import inspect
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/networkx/drawing/layout.py", line 554, in _fruchterman_reingold
    delta_pos = np.einsum("ij,i->ij", displacement, t / length)
  File "/work/rleap1/rishabh.bhatia/miniconda3/envs/train/lib/python3.10/site-packages/numpy/core/einsumfunc.py", line 1001, in _einsum_dispatcher
    def _einsum_dispatcher(*operands, out=None, optimize=None, **kwargs):
KeyboardInterrupt