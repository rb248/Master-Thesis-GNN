Using cpu device
Graph:  [(0, {'type': 'obj', 'features': [103.0, 145.0, 0.0, 0.0, 1.0, 0.0, 0.0]}), (1, {'type': 'obj', 'features': [105.0, 80.0, 0.0, 0.0, 0.0, 1.0, 0.0]}), (2, {'type': 'obj', 'features': [105.0, 120.0, 0.0, 0.0, 0.0, 1.0, 0.0]}), (3, {'type': 'obj', 'features': [66.0, 120.0, 2.0, 0.0, 0.0, 0.0, 1.0]}), (4, {'type': 'obj', 'features': [103.0, 120.0, 2.0, 0.0, 0.0, 0.0, 1.0]}), (5, {'type': 'obj', 'features': [122.0, 120.0, 2.0, 0.0, 0.0, 0.0, 1.0]}), (6, {'type': 'obj', 'features': [149.0, 80.0, 2.0, 0.0, 0.0, 0.0, 1.0]}), (7, {'type': 'obj', 'features': [129.0, 80.0, 2.0, 0.0, 0.0, 0.0, 1.0]}), (8, {'type': 'obj', 'features': [72.0, 80.0, 2.0, 0.0, 0.0, 0.0, 1.0]}), (9, {'type': 'obj', 'features': [24.0, 120.0, 2.0, 0.0, 0.0, 0.0, 1.0]}), (10, {'type': 'obj', 'features': [136.0, 80.0, 2.0, 0.0, 0.0, 0.0, 1.0]}), (11, {'type': 'obj', 'features': [79.0, 80.0, 2.0, 0.0, 0.0, 0.0, 1.0]}), (12, {'type': 'obj', 'features': [186.0, 80.0, 2.0, 0.0, 0.0, 0.0, 1.0]}), (13, {'type': 'obj', 'features': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}), (14, {'type': 'obj', 'features': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}), (15, {'type': 'obj', 'features': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}), (16, {'type': 'obj', 'features': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}), (17, {'type': 'obj', 'features': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}), (18, {'type': 'obj', 'features': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}), (19, {'type': 'obj', 'features': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}), (20, {'type': 'obj', 'features': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}), (21, {'type': 'obj', 'features': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}), (22, {'type': 'obj', 'features': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}), (23, {'type': 'obj', 'features': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}), (24, {'type': 'ChickenOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(0), {}), (tensor(2), {}), (25, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(3), {}), (tensor(1), {}), (26, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(2), {}), (27, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(4), {}), (tensor(1), {}), (28, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(2), {}), (29, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(5), {}), (tensor(1), {}), (30, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(2), {}), (31, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(6), {}), (tensor(1), {}), (32, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(2), {}), (33, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(7), {}), (tensor(1), {}), (34, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(2), {}), (35, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(8), {}), (tensor(1), {}), (36, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(2), {}), (37, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(9), {}), (tensor(1), {}), (38, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(2), {}), (39, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(10), {}), (tensor(1), {}), (40, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(2), {}), (41, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(11), {}), (tensor(1), {}), (42, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(2), {}), (43, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(12), {}), (tensor(1), {}), (44, {'type': 'CarOnLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(2), {}), (45, {'type': 'LaneNextToLane', 'features': [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]}), (tensor(1), {}), (tensor(2), {})]
Node features:  {}
Traceback (most recent call last):
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/freeway/run_supervised_gnn.py", line 117, in <module>
    main()
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/freeway/run_supervised_gnn.py", line 111, in main
    model.learn(total_timesteps=1000000, callback=[save_best_callback, eval_callback])
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/ppo/ppo.py", line 315, in learn
    return super().learn(
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 300, in learn
    continue_training = self.collect_rollouts(self.env, callback, self.rollout_buffer, n_rollout_steps=self.n_steps)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 179, in collect_rollouts
    actions, values, log_probs = self.policy(obs_tensor)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 645, in forward
    features = self.extract_features(obs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 672, in extract_features
    return super().extract_features(obs, self.features_extractor if features_extractor is None else features_extractor)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 131, in extract_features
    return features_extractor(preprocessed_obs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/model/policy.py", line 40, in forward
    pyg_data = self.encoder.encode(observations)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/encoder/GraphEncoder.py", line 336, in encode
    return Batch.from_data_list(self.to_pyg_data(batch_data))
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/encoder/GraphEncoder.py", line 355, in to_pyg_data
    raise ValueError(f"Node {node} is missing 'type' attribute")
ValueError: Node 0 is missing 'type' attribute