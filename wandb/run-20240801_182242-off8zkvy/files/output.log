
Using cpu device
---------------------------------
| rollout/           |          |
|    ep_len_mean     | 1e+03    |
|    ep_rew_mean     | -500     |
| time/              |          |
|    fps             | 120      |
|    iterations      | 1        |
|    time_elapsed    | 16       |
|    total_timesteps | 2048     |
---------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -500         |
| time/                   |              |
|    fps                  | 48           |
|    iterations           | 2            |
|    time_elapsed         | 85           |
|    total_timesteps      | 4096         |
| train/                  |              |
|    approx_kl            | 0.0016807332 |
|    clip_fraction        | 0.0168       |
|    clip_range           | 0.2          |
|    entropy_loss         | -1.09        |
|    explained_variance   | -0.0156      |
|    learning_rate        | 0.0003       |
|    loss                 | 0.633        |
|    n_updates            | 10           |
|    policy_gradient_loss | -0.00192     |
|    value_loss           | 4.12         |
------------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -488        |
| time/                   |             |
|    fps                  | 37          |
|    iterations           | 3           |
|    time_elapsed         | 165         |
|    total_timesteps      | 6144        |
| train/                  |             |
|    approx_kl            | 0.007537289 |
|    clip_fraction        | 0.0243      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.07       |
|    explained_variance   | -0.0134     |
|    learning_rate        | 0.0003      |
|    loss                 | 0.104       |
|    n_updates            | 20          |
|    policy_gradient_loss | 0.00084     |
|    value_loss           | 7.31        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -480        |
| time/                   |             |
|    fps                  | 33          |
|    iterations           | 4           |
|    time_elapsed         | 244         |
|    total_timesteps      | 8192        |
| train/                  |             |
|    approx_kl            | 0.012450664 |
|    clip_fraction        | 0.0187      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.04       |
|    explained_variance   | -8.9e-05    |
|    learning_rate        | 0.0003      |
|    loss                 | 4.15        |
|    n_updates            | 30          |
|    policy_gradient_loss | -0.000842   |
|    value_loss           | 16.8        |
-----------------------------------------
Num timesteps: 10000
Best mean reward: -inf - Last mean reward per episode: -471.00
Saving new best model at 10000 timesteps
Saving new best model to ./logs/Freeway-GNN-training/best_model.zip
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -471         |
| time/                   |              |
|    fps                  | 31           |
|    iterations           | 5            |
|    time_elapsed         | 323          |
|    total_timesteps      | 10240        |
| train/                  |              |
|    approx_kl            | 0.0034318059 |
|    clip_fraction        | 0.00171      |
|    clip_range           | 0.2          |
|    entropy_loss         | -1           |
|    explained_variance   | 0.000202     |
|    learning_rate        | 0.0003       |
|    loss                 | 6.2          |
|    n_updates            | 40           |
|    policy_gradient_loss | 0.000429     |
|    value_loss           | 16.2         |
------------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -465        |
| time/                   |             |
|    fps                  | 30          |
|    iterations           | 6           |
|    time_elapsed         | 399         |
|    total_timesteps      | 12288       |
| train/                  |             |
|    approx_kl            | 0.006602547 |
|    clip_fraction        | 0.0517      |
|    clip_range           | 0.2         |
|    entropy_loss         | -0.959      |
|    explained_variance   | 0.0241      |
|    learning_rate        | 0.0003      |
|    loss                 | 10.4        |
|    n_updates            | 50          |
|    policy_gradient_loss | -0.00104    |
|    value_loss           | 23.1        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -451        |
| time/                   |             |
|    fps                  | 29          |
|    iterations           | 7           |
|    time_elapsed         | 479         |
|    total_timesteps      | 14336       |
| train/                  |             |
|    approx_kl            | 0.009064466 |
|    clip_fraction        | 0.0625      |
|    clip_range           | 0.2         |
|    entropy_loss         | -0.897      |
|    explained_variance   | 0           |
|    learning_rate        | 0.0003      |
|    loss                 | 7.6         |
|    n_updates            | 60          |
|    policy_gradient_loss | -0.00253    |
|    value_loss           | 16.4        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -439        |
| time/                   |             |
|    fps                  | 29          |
|    iterations           | 8           |
|    time_elapsed         | 559         |
|    total_timesteps      | 16384       |
| train/                  |             |
|    approx_kl            | 0.010855418 |
|    clip_fraction        | 0.104       |
|    clip_range           | 0.2         |
|    entropy_loss         | -0.787      |
|    explained_variance   | 0           |
|    learning_rate        | 0.0003      |
|    loss                 | 8.35        |
|    n_updates            | 70          |
|    policy_gradient_loss | -0.0054     |
|    value_loss           | 32.1        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -437        |
| time/                   |             |
|    fps                  | 28          |
|    iterations           | 9           |
|    time_elapsed         | 645         |
|    total_timesteps      | 18432       |
| train/                  |             |
|    approx_kl            | 0.005881793 |
|    clip_fraction        | 0.0754      |
|    clip_range           | 0.2         |
|    entropy_loss         | -0.685      |
|    explained_variance   | 0           |
|    learning_rate        | 0.0003      |
|    loss                 | 10.4        |
|    n_updates            | 80          |
|    policy_gradient_loss | -0.00392    |
|    value_loss           | 30.5        |
-----------------------------------------
Num timesteps: 20000
Best mean reward: -471.00 - Last mean reward per episode: -431.50
Saving new best model at 20000 timesteps
Saving new best model to ./logs/Freeway-GNN-training/best_model.zip
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -432         |
| time/                   |              |
|    fps                  | 27           |
|    iterations           | 10           |
|    time_elapsed         | 731          |
|    total_timesteps      | 20480        |
| train/                  |              |
|    approx_kl            | 0.0029034473 |
|    clip_fraction        | 0.00571      |
|    clip_range           | 0.2          |
|    entropy_loss         | -0.616       |
|    explained_variance   | 0            |
|    learning_rate        | 0.0003       |
|    loss                 | 7.55         |
|    n_updates            | 90           |
|    policy_gradient_loss | -0.000368    |
|    value_loss           | 24.2         |
------------------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -423         |
| time/                   |              |
|    fps                  | 27           |
|    iterations           | 11           |
|    time_elapsed         | 812          |
|    total_timesteps      | 22528        |
| train/                  |              |
|    approx_kl            | 0.0052995095 |
|    clip_fraction        | 0.0419       |
|    clip_range           | 0.2          |
|    entropy_loss         | -0.585       |
|    explained_variance   | 0            |
|    learning_rate        | 0.0003       |
|    loss                 | 24.9         |
|    n_updates            | 100          |
|    policy_gradient_loss | -0.00137     |
|    value_loss           | 41.8         |
------------------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -414         |
| time/                   |              |
|    fps                  | 27           |
|    iterations           | 12           |
|    time_elapsed         | 893          |
|    total_timesteps      | 24576        |
| train/                  |              |
|    approx_kl            | 0.0031984597 |
|    clip_fraction        | 0.026        |
|    clip_range           | 0.2          |
|    entropy_loss         | -0.522       |
|    explained_variance   | -1.19e-07    |
|    learning_rate        | 0.0003       |
|    loss                 | 18.1         |
|    n_updates            | 110          |
|    policy_gradient_loss | -0.000939    |
|    value_loss           | 30.2         |
------------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -403        |
| time/                   |             |
|    fps                  | 27          |
|    iterations           | 13          |
|    time_elapsed         | 973         |
|    total_timesteps      | 26624       |
| train/                  |             |
|    approx_kl            | 0.003067186 |
|    clip_fraction        | 0.0383      |
|    clip_range           | 0.2         |
|    entropy_loss         | -0.453      |
|    explained_variance   | 0           |
|    learning_rate        | 0.0003      |
|    loss                 | 24.4        |
|    n_updates            | 120         |
|    policy_gradient_loss | -0.00234    |
|    value_loss           | 39.9        |
-----------------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -398         |
| time/                   |              |
|    fps                  | 27           |
|    iterations           | 14           |
|    time_elapsed         | 1058         |
|    total_timesteps      | 28672        |
| train/                  |              |
|    approx_kl            | 0.0029893813 |
|    clip_fraction        | 0.0426       |
|    clip_range           | 0.2          |
|    entropy_loss         | -0.403       |
|    explained_variance   | 0            |
|    learning_rate        | 0.0003       |
|    loss                 | 12.4         |
|    n_updates            | 130          |
|    policy_gradient_loss | -0.00198     |
|    value_loss           | 43.8         |
------------------------------------------
Num timesteps: 30000
Best mean reward: -431.50 - Last mean reward per episode: -391.00
Saving new best model at 30000 timesteps
Saving new best model to ./logs/Freeway-GNN-training/best_model.zip
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -391         |
| time/                   |              |
|    fps                  | 26           |
|    iterations           | 15           |
|    time_elapsed         | 1144         |
|    total_timesteps      | 30720        |
| train/                  |              |
|    approx_kl            | 7.584007e-05 |
|    clip_fraction        | 0.00864      |
|    clip_range           | 0.2          |
|    entropy_loss         | -0.398       |
|    explained_variance   | 1.79e-07     |
|    learning_rate        | 0.0003       |
|    loss                 | 35.1         |
|    n_updates            | 140          |
|    policy_gradient_loss | 0.000479     |
|    value_loss           | 40.6         |
------------------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -386         |
| time/                   |              |
|    fps                  | 26           |
|    iterations           | 16           |
|    time_elapsed         | 1235         |
|    total_timesteps      | 32768        |
| train/                  |              |
|    approx_kl            | 0.0015410287 |
|    clip_fraction        | 0.0123       |
|    clip_range           | 0.2          |
|    entropy_loss         | -0.371       |
|    explained_variance   | 1.19e-07     |
|    learning_rate        | 0.0003       |
|    loss                 | 25           |
|    n_updates            | 150          |
|    policy_gradient_loss | -8.7e-05     |
|    value_loss           | 37.7         |
------------------------------------------
Traceback (most recent call last):
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/freeway/run_supervised_gnn.py", line 290, in <module>
    model.learn(total_timesteps=1000000, callback=[WandbCallback(), save_callback])
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/ppo/ppo.py", line 315, in learn
    return super().learn(
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 313, in learn
    self.train()
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/ppo/ppo.py", line 217, in train
    values, log_prob, entropy = self.policy.evaluate_actions(rollout_data.observations, actions)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 730, in evaluate_actions
    features = self.extract_features(obs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 672, in extract_features
    return super().extract_features(obs, self.features_extractor if features_extractor is None else features_extractor)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 131, in extract_features
    return features_extractor(preprocessed_obs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/model/policy.py", line 40, in forward
    pyg_data = self.encoder.encode(observations)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/encoder/GraphEncoder.py", line 460, in encode
    return Batch.from_data_list(self.to_pyg_data(batch_data))
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/encoder/GraphEncoder.py", line 493, in to_pyg_data
    data[self.obj_type_id].x = torch.cat(obj_features)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch_geometric/data/hetero_data.py", line 178, in __getitem__
    key = self._to_canonical(*args)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch_geometric/data/hetero_data.py", line 486, in _to_canonical
    node_types = [key for key in self.node_types if key == args]
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch_geometric/data/hetero_data.py", line 257, in node_types
    return list(self._node_store_dict.keys())
KeyboardInterrupt