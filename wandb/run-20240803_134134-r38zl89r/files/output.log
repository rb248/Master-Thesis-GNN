
Using cpu device
/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch_geometric/deprecation.py:26: UserWarning: 'nn.glob.GlobalAttention' is deprecated, use 'nn.aggr.AttentionalAggregation' instead
  warnings.warn(out)
---------------------------------
| rollout/           |          |
|    ep_len_mean     | 1e+03    |
|    ep_rew_mean     | -506     |
| time/              |          |
|    fps             | 773      |
|    iterations      | 1        |
|    time_elapsed    | 2        |
|    total_timesteps | 2048     |
---------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -511        |
| time/                   |             |
|    fps                  | 246         |
|    iterations           | 2           |
|    time_elapsed         | 16          |
|    total_timesteps      | 4096        |
| train/                  |             |
|    approx_kl            | 0.006881032 |
|    clip_fraction        | 0.0554      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.09       |
|    explained_variance   | -0.0829     |
|    learning_rate        | 0.0003      |
|    loss                 | 0.997       |
|    n_updates            | 10          |
|    policy_gradient_loss | -0.00249    |
|    value_loss           | 6.53        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -509        |
| time/                   |             |
|    fps                  | 173         |
|    iterations           | 3           |
|    time_elapsed         | 35          |
|    total_timesteps      | 6144        |
| train/                  |             |
|    approx_kl            | 0.012000229 |
|    clip_fraction        | 0.0294      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.08       |
|    explained_variance   | 0           |
|    learning_rate        | 0.0003      |
|    loss                 | 0.244       |
|    n_updates            | 20          |
|    policy_gradient_loss | -0.00488    |
|    value_loss           | 18.2        |
-----------------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -510         |
| time/                   |              |
|    fps                  | 155          |
|    iterations           | 4            |
|    time_elapsed         | 52           |
|    total_timesteps      | 8192         |
| train/                  |              |
|    approx_kl            | 0.0073955907 |
|    clip_fraction        | 0.0285       |
|    clip_range           | 0.2          |
|    entropy_loss         | -1.08        |
|    explained_variance   | -1.19e-07    |
|    learning_rate        | 0.0003       |
|    loss                 | 4.42         |
|    n_updates            | 30           |
|    policy_gradient_loss | -0.00272     |
|    value_loss           | 12           |
------------------------------------------
Num timesteps: 10000
Best mean reward: -inf - Last mean reward per episode: -508.40
Saving new best model at 10000 timesteps
Saving new best model to ./logs/Freeway-GNN-training/best_model.zip
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -508        |
| time/                   |             |
|    fps                  | 150         |
|    iterations           | 5           |
|    time_elapsed         | 68          |
|    total_timesteps      | 10240       |
| train/                  |             |
|    approx_kl            | 0.009748145 |
|    clip_fraction        | 0.0287      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.08       |
|    explained_variance   | 0           |
|    learning_rate        | 0.0003      |
|    loss                 | 0.111       |
|    n_updates            | 40          |
|    policy_gradient_loss | -0.00262    |
|    value_loss           | 11.2        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -508        |
| time/                   |             |
|    fps                  | 147         |
|    iterations           | 6           |
|    time_elapsed         | 83          |
|    total_timesteps      | 12288       |
| train/                  |             |
|    approx_kl            | 0.014411369 |
|    clip_fraction        | 0.0627      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.06       |
|    explained_variance   | 5.96e-08    |
|    learning_rate        | 0.0003      |
|    loss                 | 6.43        |
|    n_updates            | 50          |
|    policy_gradient_loss | -0.0019     |
|    value_loss           | 9.9         |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -507        |
| time/                   |             |
|    fps                  | 144         |
|    iterations           | 7           |
|    time_elapsed         | 99          |
|    total_timesteps      | 14336       |
| train/                  |             |
|    approx_kl            | 0.016507693 |
|    clip_fraction        | 0.0234      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1          |
|    explained_variance   | 0           |
|    learning_rate        | 0.0003      |
|    loss                 | 0.167       |
|    n_updates            | 60          |
|    policy_gradient_loss | -0.000387   |
|    value_loss           | 10.3        |
-----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -506        |
| time/                   |             |
|    fps                  | 142         |
|    iterations           | 8           |
|    time_elapsed         | 115         |
|    total_timesteps      | 16384       |
| train/                  |             |
|    approx_kl            | 0.017017629 |
|    clip_fraction        | 0.0802      |
|    clip_range           | 0.2         |
|    entropy_loss         | -0.918      |
|    explained_variance   | 0           |
|    learning_rate        | 0.0003      |
|    loss                 | 0.135       |
|    n_updates            | 70          |
|    policy_gradient_loss | -0.00208    |
|    value_loss           | 10.8        |
-----------------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -505         |
| time/                   |              |
|    fps                  | 135          |
|    iterations           | 9            |
|    time_elapsed         | 136          |
|    total_timesteps      | 18432        |
| train/                  |              |
|    approx_kl            | 0.0025723304 |
|    clip_fraction        | 0.00698      |
|    clip_range           | 0.2          |
|    entropy_loss         | -0.884       |
|    explained_variance   | 0            |
|    learning_rate        | 0.0003       |
|    loss                 | 0.888        |
|    n_updates            | 80           |
|    policy_gradient_loss | 0.000338     |
|    value_loss           | 11.6         |
------------------------------------------
Num timesteps: 20000
Best mean reward: -508.40 - Last mean reward per episode: -504.65
Saving new best model at 20000 timesteps
Saving new best model to ./logs/Freeway-GNN-training/best_model.zip
----------------------------------------
| rollout/                |            |
|    ep_len_mean          | 1e+03      |
|    ep_rew_mean          | -505       |
| time/                   |            |
|    fps                  | 133        |
|    iterations           | 10         |
|    time_elapsed         | 152        |
|    total_timesteps      | 20480      |
| train/                  |            |
|    approx_kl            | 0.00819809 |
|    clip_fraction        | 0.0386     |
|    clip_range           | 0.2        |
|    entropy_loss         | -0.83      |
|    explained_variance   | 5.96e-08   |
|    learning_rate        | 0.0003     |
|    loss                 | 8.37       |
|    n_updates            | 90         |
|    policy_gradient_loss | -0.00117   |
|    value_loss           | 12.4       |
----------------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -504         |
| time/                   |              |
|    fps                  | 130          |
|    iterations           | 11           |
|    time_elapsed         | 172          |
|    total_timesteps      | 22528        |
| train/                  |              |
|    approx_kl            | 0.0032758368 |
|    clip_fraction        | 0.0447       |
|    clip_range           | 0.2          |
|    entropy_loss         | -0.768       |
|    explained_variance   | -1.19e-07    |
|    learning_rate        | 0.0003       |
|    loss                 | 8.07         |
|    n_updates            | 100          |
|    policy_gradient_loss | -0.00127     |
|    value_loss           | 13.2         |
------------------------------------------
----------------------------------------
| rollout/                |            |
|    ep_len_mean          | 1e+03      |
|    ep_rew_mean          | -504       |
| time/                   |            |
|    fps                  | 128        |
|    iterations           | 12         |
|    time_elapsed         | 191        |
|    total_timesteps      | 24576      |
| train/                  |            |
|    approx_kl            | 0.00196573 |
|    clip_fraction        | 0.0432     |
|    clip_range           | 0.2        |
|    entropy_loss         | -0.767     |
|    explained_variance   | 1.19e-07   |
|    learning_rate        | 0.0003     |
|    loss                 | 12.6       |
|    n_updates            | 110        |
|    policy_gradient_loss | -0.00045   |
|    value_loss           | 13.9       |
----------------------------------------
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 1e+03       |
|    ep_rew_mean          | -504        |
| time/                   |             |
|    fps                  | 127         |
|    iterations           | 13          |
|    time_elapsed         | 208         |
|    total_timesteps      | 26624       |
| train/                  |             |
|    approx_kl            | 0.006925962 |
|    clip_fraction        | 0.0414      |
|    clip_range           | 0.2         |
|    entropy_loss         | -0.696      |
|    explained_variance   | 0           |
|    learning_rate        | 0.0003      |
|    loss                 | 2.81        |
|    n_updates            | 120         |
|    policy_gradient_loss | -0.00114    |
|    value_loss           | 14.5        |
-----------------------------------------
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -503         |
| time/                   |              |
|    fps                  | 126          |
|    iterations           | 14           |
|    time_elapsed         | 226          |
|    total_timesteps      | 28672        |
| train/                  |              |
|    approx_kl            | 0.0066681635 |
|    clip_fraction        | 0.043        |
|    clip_range           | 0.2          |
|    entropy_loss         | -0.618       |
|    explained_variance   | 0            |
|    learning_rate        | 0.0003       |
|    loss                 | 3.85         |
|    n_updates            | 130          |
|    policy_gradient_loss | -0.00031     |
|    value_loss           | 15           |
------------------------------------------
Num timesteps: 30000
Best mean reward: -504.65 - Last mean reward per episode: -503.13
Saving new best model at 30000 timesteps
Saving new best model to ./logs/Freeway-GNN-training/best_model.zip
------------------------------------------
| rollout/                |              |
|    ep_len_mean          | 1e+03        |
|    ep_rew_mean          | -503         |
| time/                   |              |
|    fps                  | 124          |
|    iterations           | 15           |
|    time_elapsed         | 246          |
|    total_timesteps      | 30720        |
| train/                  |              |
|    approx_kl            | 0.0034768567 |
|    clip_fraction        | 0.0453       |
|    clip_range           | 0.2          |
|    entropy_loss         | -0.525       |
|    explained_variance   | 0            |
|    learning_rate        | 0.0003       |
|    loss                 | 1.72         |
|    n_updates            | 140          |
|    policy_gradient_loss | -0.000718    |
|    value_loss           | 15.4         |
------------------------------------------
Traceback (most recent call last):
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/freeway/run_supervised_gnn.py", line 291, in <module>
    model.learn(total_timesteps=1000000, callback=[WandbCallback(), save_callback])
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/ppo/ppo.py", line 315, in learn
    return super().learn(
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 300, in learn
    continue_training = self.collect_rollouts(self.env, callback, self.rollout_buffer, n_rollout_steps=self.n_steps)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 179, in collect_rollouts
    actions, values, log_probs = self.policy(obs_tensor)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 645, in forward
    features = self.extract_features(obs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 672, in extract_features
    return super().extract_features(obs, self.features_extractor if features_extractor is None else features_extractor)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/stable_baselines3/common/policies.py", line 131, in extract_features
    return features_extractor(preprocessed_obs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/model/policy.py", line 43, in forward
    pyg_data = self.encoder.encode(observations)
  File "/Users/rishubbhatia/Documents/master thesis/Master-Thesis-GNN/games/encoder/GraphEncoder.py", line 581, in encode
    dist = torch.norm(node_features[player_index, :2] - node_features[i, :2]).item()
  File "/Users/rishubbhatia/miniforge3/envs/games/lib/python3.10/site-packages/torch/functional.py", line 1604, in norm
    if dim is not None:
KeyboardInterrupt